:root {
  --darkgray: #282828;
  --lightgray: #3a3a3a;

  --angle: 0turn;

  --button-border-radius: 1.25rem;
  --button-padding: 1rem;
  --rainbow-border-radius: calc(
    var(--button-padding) + var(--button-border-radius)
  );
}

@keyframes rainbow {
  100% {
    --angle: 1turn;
  }
}

@property --angle {
  syntax: '<angle>';
  inherits: false;
  initial-value: 0turn;
}

@media (prefers-reduced-motion: no-preference) {
  html {
    interpolate-size: allow-keywords;
  }
}

html {
  height: 100%;
}

body {
  background-color: #f2f2f2;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  -webkit-font-smoothing: antialiased;
  margin: 0;
}

.glass {
  position: relative;
  background-color: rgba(255, 255, 255, 0.55);
  border-radius: var(--rainbow-border-radius);
  box-shadow: inset 0 2px rgba(255, 255, 255, 0.25),
    inset -1.5px 0 rgba(0, 0, 0, 0.25), inset 0 -2px rgba(255, 255, 255, 0.25),
    inset 1.5px 0 rgba(0, 0, 0, 0.25),
    0 0.25rem 0.5rem 0.125rem rgb(0, 0, 0, 0.1);
  padding: var(--button-padding);

  &:has(.button:active) {
    &:before {
      --rainbow-border-radius: calc(var(--button-border-radius) + 0.25rem);
      transform: scale(0.93, 0.835);
      filter: blur(0.25rem);
      opacity: 0.8;
    }
  }

  // rainbow
  &:before {
    transition-property: border-radius, transform, filter, opacity;
    transition-duration: 30ms;
    transition-timing-function: ease-in-out;

    content: '';
    position: absolute;
    animation: rainbow 3s linear infinite;
    background: conic-gradient(
      from var(--angle),
      magenta,
      aqua,
      yellow,
      red,
      blue,
      magenta
    );
    filter: blur(1rem);
    opacity: 0.5;
    border-radius: var(--rainbow-border-radius);
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;

    z-index: -1;
  }
}

.button {
  transition-property: transform, filter;
  transition-duration: 30ms;
  transition-timing-function: ease-in-out;

  &:active {
    transform: scale(0.985, 0.96);
    filter: drop-shadow(0 0 0 rgb(0, 0, 0, 0.5));
  }

  display: grid;
  grid-template-areas: 'stacked';
  border: none;
  padding: 0;
  cursor: pointer;
  border-radius: var(--button-border-radius);

  background: linear-gradient(to bottom, var(--lightgray), var(--darkgray));
  border-radius: var(--button-border-radius);
  filter: drop-shadow(0 0.5rem 0.5rem rgb(0, 0, 0, 0.5));
  box-shadow: 0 0 1px white;

  // bevel
  .text {
    content: '';
    grid-area: stacked;

    font-family: 'Pixelify Sans', sans-serif;
    font-optical-sizing: auto;
    font-style: normal;
    font-weight: 400;
    font-size: 2.5rem;
    padding: 1.4rem 2.3rem;
    margin: 1.25rem;
    color: white;
    background: linear-gradient(to bottom, var(--darkgray), var(--lightgray));
    border-radius: 3.125rem;

    z-index: 2;
  }
}
